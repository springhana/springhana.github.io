---
layout: post
related_posts:
  - /study/typescript/2024-05-01-인터페이스.markdown
  - /study/typescript/2024-05-07-타입 별칭.markdown
title: 연산자를 사용한 타입 정의
categories:
  - study
  - typescript
image: /assets/img/typescript/typescript_logo.png
permalink: '/:categories/:year/:month/:day/:title/'
description: >
  캡틴 판교의 쉽게 시작하는 타입스크립트, 06장 연산자를 사용한 타입 정의
published : false
---

* toc
{:toc}

# 1. 유니언 타입

**유니언 타입(union type)** 은 여러 개의 타입 중 한 개만 쓰고 싶을 때 사용하는 문법이다.

```ts
function union_text(text: string | number) {
	console.log(text);
}
```

> 자바스크립트 `OR` 연산자의 `|`를 이용하여 여러 개의 타입 중 하나를 사용하겠다고 선언하는 방식이 **유니언 타입**이다.

---
# 2. 유니언 타입의 장점

⭐ 유니언 타입을 사용해서 같은 동작을 하는 함수의 코드 중복을 줄일 수 있다.

---
# 3. 유니언 타입을 사용할 때 주의할 점

⭐ 함수 내부에서 파라미터 타입의 종류에 따라 특정 로직을 실행하고 싶다면 `in` 연산자를 사용해서 로직을 작성하면 된다.

```ts
function introduce(someone: Person | Developer) {
	if('age' in someone) {
		console.log(someone.age)
		return
	}
	if('skill' in someone) {
		console.log(someone.skill)
		return
	}
}
```

- `in` 연산자는 객체에 특정 속성이 있는지 확인하는 자바스크립트 연산자이다.

특정 타입의 속성과 메서드를 사용하고 싶다면 `typeof`나 `in` 연산자를 사용하여 타입을 구분한 후 코드를 작성해야 한다. 이런 동작을 **타입 가드**라고 한다.

> `typeof`는 해당 데이터가 어떤 데이터 타입을 갖고 있는지 문자열로 반환해주는 연산자이다.

---
# 4. 인터섹션 타입

**인터섹션 타입(intersection type)** 은 타입 2개를 하나로 합쳐서 사용할 수 있는 타입이다.

```ts
function introduce(someone: Avenger & Hero) {
	console.log(someone.name);
	console.log(someone.skill);
}
```

함수의 파라미터에 인터섹션 타입(`&`)으로 정의해주면 된다.

- 인터렉션 타입은 이미 있는 타입 2개를 합칠 때 사용한다.
