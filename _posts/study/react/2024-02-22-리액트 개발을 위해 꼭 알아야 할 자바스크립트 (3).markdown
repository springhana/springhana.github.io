---
layout: post
related_posts:
  - _posts/study/react/2024-02-21-리액트 개발을 위해 꼭 알아야 할 자바스크립트 (2).markdown
title: 리액트 개발을 위해 꼭 알아야 할 자바스크립트 (3)
categories:
  - study
  - react
image: /assets/img/react/modern-react-book.png
permalink: '/:categories/:year/:month/:day/:title/'
description: >
  모던 리액트 Deep Dive: 리액트의 핵심 개념과 동작 원리부터 Next.js까지, 리액트의 모든 것 - 01장 리액트 개발을 위해 꼭 알아야 할 자바스크립트
---

* toc
{:toc}

# 5. 이벤트 루프와 비동기 통신의 이해

자바스크립트는 싱글 스레드에서 작동하기 때문에 한 번에 하나의 작업만 동기 방식으로 처리할 수 있다.

> **동기 방식** <br>
> 동기는 직렬 방법으로 작업을 처리하는 것을 의미

무조건 응답을 받은 이후에야 다른 작업을 처리할 수 있다. 그 동안은 모든 작업은 대기 한다.

<br>

> **비동기 방식** <br>
> 비동기란 병렬 방식으로 작업을 처리하는 것을 의미

요청을 시작한 후 응답에 상관없이 다음 작업을 처리한다. 한 번에 여러 작업이 실행될 수 있다.

<br>

## **싱글 스레드 자바스크립트**

하나의 프로그램에는 하나의 프로세스만이 할당된다.

이 부분을 해결하기 위해 탄생한 더 작은 실행 단위가 **스레드**이다.

하나의 프로세스에서는 여러 개의 스레드를 만들 수 있고, 스레드까리는 메모리를 공유할 수 있어 여러 작업을 동시에 할 수 있다.

자바스크립트가 멀티 스레드가 아닌 싱글 스레드로 설계된 이유는 내부적으로 처리가 복잡하다는 단점과 하나의 스레드가 문제가 생기면 같이 공유하는 다른 스레드에도 동시에 문제가 생길 수 일어날 수 있는 문제가 있다.

- 자바스크립트는 "Run-to-completion"의 특징이 있다.

> Run-to-completion <br>
> 하나의 코드가 실행하는 데 오래 걸리면 뒤에 있는 코드가 실행되지 않는다

자바스크립트에서 비동기 함수를 선언할려면 async 사용하여 여러 작업을 동시에 실행할 수 있는 방법도 있다.

<br>

## **이벤트 루프란?**

> 이벤트 루프 <br>
> 자바스크립트 런타임 외부에서 자바스크립트의 비동기 실행을 돕기 위해 만들어진 장치

<br>

<strong class="green_">호출과 이벤트 루프</strong>

호출 스택(call stack)은 자바스크립트에서 수행햐야 할 코드나 함수를 순차적으로 담아두는 스택이다.

호출 스택이 비어 있는지 여부를 확인하는 것이 바로 이벤트 루프다. 

이벤트 푸프는 단순히 이벤트 루프만의 단일 스레드 내부에서 이 호출 스택 내부에 수행해야 할 작업이 있는지 확인하고, 수행해야 할 코드가 있다면 실행한다.

코드를 실행하는 것, 호출 스택이 비어있는 확인 등 단일 스레드에서 일어난다.

비동기 작업으로 실행한 코드다.

```js
function bar() {
  console.log('bar')
}

function baz() {
  console.log('baz')
}

function foo() {
  console.log('baz')
  setTimeout(bar(), 0)
  baz()
}
```

setTimeout()을 사용하면 정확하게 몇초 뒤에 실행된다는 것을 보장 못한다.

이벤트 루프는 테스크 큐를 한 개 이상 가지고 있다.

> **테스트 큐** <br>
> 실행햐야 할 태스크의 집합을 의미