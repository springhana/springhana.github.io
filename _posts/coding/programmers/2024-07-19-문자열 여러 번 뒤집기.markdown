---
layout: post
related_posts: 
  - _posts/coding/programmers/2024-07-16-배열 만들기2.markdown
title: 문자열 여러 번 뒤집기
categories:
  - coding
  - programmers
image: /assets/img/coding/프로그래머스/문자열 여러 번 뒤집기 썸네일.png
permalink: '/:categories/:year/:month/:day/:title/'
description: >

 프로그래머스 파이썬 - 문자열 여러 번 뒤집기
---

* toc
{:toc}

# 문자열 여러 번 뒤집기

# 문제

> <a href="https://school.programmers.co.kr/learn/courses/30/lessons/181913">문자열 여러 번 뒤집기</a>

문자열 `my_string`과 이차원 정수 배열 `queries`가 매개변수로 주어집니다. `queries`의 원소는 [s, e] 형태로, `my_string`의 인덱스 s부터 인덱스 e까지를 뒤집으라는 의미입니다. `my_string`에 `queries`의 명령을 순서대로 처리한 후의 문자열을 return 하는 solution 함수를 작성해 주세요.

---

##### 제한사항

[](https://github.com/springhana/CodingTest_python/edit/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/0/181913.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EC%97%AC%EB%9F%AC%E2%80%85%EB%B2%88%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0/README.md#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD)

- `my_string`은 영소문자로만 이루어져 있습니다.
- 1 ≤ `my_string`의 길이 ≤ 1,000
- `queries`의 원소는 [s, e]의 형태로 0 ≤ s ≤ e < `my_string`의 길이를 만족합니다.
- 1 ≤ `queries`의 길이 ≤ 1,000

---

##### 입출력 예

[](https://github.com/springhana/CodingTest_python/edit/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/0/181913.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EC%97%AC%EB%9F%AC%E2%80%85%EB%B2%88%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0/README.md#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88)

|my_string|queries|result|
|---|---|---|
|"rermgorpsam"|[[2, 3], [0, 7], [5, 9], [6, 10]]|"programmers"|

---

##### 입출력 예 설명

[](https://github.com/springhana/CodingTest_python/edit/master/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/0/181913.%E2%80%85%EB%AC%B8%EC%9E%90%EC%97%B4%E2%80%85%EC%97%AC%EB%9F%AC%E2%80%85%EB%B2%88%E2%80%85%EB%92%A4%EC%A7%91%EA%B8%B0/README.md#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85)

- 예제 1번의 `my_string`은 "rermgorpsam"이고 주어진 `queries`를 순서대로 처리하면 다음과 같습니다.
    
    |queries|my_string|
    |---|---|
    ||"rermgorpsam"|
    |[2, 3]|"remrgorpsam"|
    |[0, 7]|"progrmersam"|
    |[5, 9]|"prograsremm"|
    |[6, 10]|"programmers"|
    
    따라서 "programmers"를 return 합니다.

# 풀이

```python
def solution(my_string, queries):
    arr = list(my_string)
    for s, e in queries:
        origin = arr[s:e+1:1]
        arr[s:e+1] = origin[::-1]
    return ''.join(arr)
```

이 문제는 queries에서 `[s:e]`가 주어질때 **s부터 e까지 뒤집어서 그 위치에 교체하는 문제이다.**

`arr`이라는 배열에 `my_string`을 담아주고 `s부터 e`까지의 문자열을 만들어서 교체를 해주면 된다.

> `replace`로 시도해볼 수 있지만 `replace`로 시도할 경우 인덱스를 신경쓰지 않고 보이면 교체해버리는 문제가 발생하기 때문에 이 문제에서는 `replace`를 사용하지 못한다.